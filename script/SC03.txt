/*
	- ex) 	USER	
	-------------------
		USER_ID -> VARCHAR2(100)(PK)	
	-------------------
		USER_PW -> VARCHAR2(200) 	
		USER_NAME -> VARCHAR2(200)	
		USER_ADDRESS -> VARCHAR2(300)	
		USER_EMAIL -> VARCHAR2(300)
		USER_BIRTH -> DATE
*/
CREATE TABLE "USER" (
	USER_ID VARCHAR2(100) PRIMARY KEY,
	USER_PW VARCHAR2(200),
	USER_NAME VARCHAR2(200),
	USER_ADDRESS VARCHAR2(300),
	USER_EMAIL VARCHAR2(300),
	USER_BIRTH DATE
);
/*
	- ex)	ORDER		
	----------------------
		ORDER_NUM -> NUMBER(PK)	
	----------------------	
		USER_ID (FK) -> VARCHAR2(100) ※ PK와 FK의 데이터용량은 같아야한다.	
		PRODUT_NUM (FK) -> NUMBER		
		ORDER_DATE -> DATE		
*/
CREATE TABLE "ORDER"(
	ORDER_NUM NUMBER PRIMARY KEY,
	USER_ID VARCHAR2(100), -- 외래키로 참조할 컬럼의 데이터 타입과 길이를 반드시 맞춰줘야 한다.
	PRODUCT_NUM NUMBER,
	ORDER_DATE DATE,
	-- 외래키 설정방법 CONSTRAINT 제약조건명 FOREIGN KEY(외래키를 할 변수) REFERENCES "TABLE NAME"(참조할 PK)
	CONSTRAINT USER_FK FOREIGN KEY(USER_ID) REFERENCES USER(USER_ID),
	CONSTRAINT PRODUCT_FK FOREIGN KEY(PRODUCT_NUM) REFERENCES PRODUCT(PRODUCT_NUM)
);
/*
	- ex)	PRODUCT
	-----------------------
		PRODUCT_NUM -> NUMBER(PK)
	-----------------------
		PRODUCT_NAME -> VARCHAR2(300)
		PRODUCT_PRICE -> NUMBER
		PRODUCT_COUNT -> NUMBER
*/
CREATE TABLE PRODUCT(
	PRODUCT_NUM NUMBER PRIMARY KEY,
	PRODUCT_NAME VARCHAR2(300),
	PRODUCT_PRICE NUMBER,
	PRODUCT_COUNT NUMBER
);

-- EXAMPLE
--꽃(FLOWER) - FLOWER_NAME(PK): VARCHAR2(200), FLOWER_COLOR: VARCHAR2(100), FLOWER_PRICE: NUMBER
--화분(POT) - POT_NUM: NUMBER(PK), POT_COLOR: VARCHAR2(100), POT_PATTERN: VARCHAR2(200), FLOWER_NAME(FK): VARCHAR2(200)
--주문(ORDER) - POT_NUM: NUMBER(FK), FLOWER_NAME: VARCHAR2(200)(FK), ALL_COST: NUMBER, CUSTOMER: VARCHAR2(200) 
CREATE TABLE FLOWER(
	FLOWER_NAME VARCHAR2(200) PRIMARY KEY,
	FLOWER_COLOR VARCHAR2(100),
	FLOWER_PRICE NUMBER
);

CREATE TABLE POT(
	POT_NUM NUMBER PRIMARY KEY,
	POT_COLOR VARCHAR2(100),
	POT_PATTERN VARCHAR2(200),
	FLOWER_NAME VARCHAR2(200),
	CONSTRAINT POT_FK FOREIGN KEY(FLOWER_NAME) REFERENCES "FLOWER"(FLOWER_NAME)
);

DROP TABLE POT;

CREATE TABLE FLOWER_ORDER(
	POT_NUM NUMBER,
	FLOWER_NAME VARCHAR2(200),
	ALL_COST NUMBER,
	CUSTOMER VARCHAR2(200) PRIMARY KEY,
	CONSTRAINT ORDER_FK FOREIGN KEY(POT_NUM) REFERENCES POT(POT_NUM),
	CONSTRAINT FL_FK FOREIGN KEY(FLOWER_NAME) REFERENCES FLOWER(FLOWER_NAME)
);

CREATE TABLE PARTNER(
	PARTNER_ID VARCHAR2(200) PRIMARY KEY,
	PARTNER_NAME VARCHAR2(300),
	PARTNER_AGE NUMBER,
	PARTNER_ADDRESS VARCHAR2(500)
);

CREATE TABLE PET(
	PET_PIN NUMBER PRIMARY KEY,
	PET_NAME VARCHAR2(300),
	PET_AGE NUMBER,
	PARTNER_ID VARCHAR2(200),
--	GENDER CHAR(1) DEFAULT 'M' NOT NULL CONSTRAINT CHECK_CHAR CHECK(GENDER = 'M' OR GENDER = 'W'),
	GENDER CHAR(1) DEFAULT 'M' NOT NULL CONSTRAINT CHECK_CHAR CHECK(GENDER IN('M', 'W')),
	CONSTRAINT PET_FK FOREIGN KEY(PARTNER_ID) REFERENCES PARTNER(PARTNER_ID)
);

DROP TABLE PET;

--사원 테이블: EMPLOYEES
SELECT * FROM EMPLOYEES;

--사원 테이블에서 모든 사원의 이름을 조회하세요.
SELECT FIRST_NAME FROM EMPLOYEES;
