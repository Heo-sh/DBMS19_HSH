2023-02-07 day09

SQL문
- DDL
- DML
- TCL
- DCL(Data Control Language): 데이터 제어어
  - GRANT: 권한 부여
  - REVOKE: 권한 강탈

-----------------------------------------------------
VIEW
- 기존의 테이블은 그대로 놔둔 채 필요한 컬럼들 및 새로운 컬럼을 만든
  가상의 테이블
- 실제 데이터가 저장되는 것은 아니지만 VIEW를 통해서 데이터를 관리할 수 있다.
VIEW의 특징
- 독립성: 다른 곳에서 변경 불가
- 편리성: 긴 QUERY문을 짧게 사용할 수 있게 보조
- 보안성: 짧게 만들기 때문에 기존의 QUERY는 보이지 않음

---------------------------------------------------------------
PROCEDURE(프로시저)
ex)함수: 함수명() -> round(), rank(), etc...
f(x) = 2x + 1;
f: 함수의 이름
x: 매개변수
2x + 1: 결과값 or 리턴값

DBMS에서 프로시저는 어떻게 사용하는가?
- CREATE OR REPLACE PROCEDURE 프로시저명
  (
	매개변수 IN 데이터타입:=타입,
	매개변수2 IN 데이터타입%TYPE
  )
  IS
      함수 내에서 사용할 변수, 상수 등을 선언, 밑에서 반복되서 사용될
      문장을 하나로 선언해서 사용하겠다.

  BEGIN -------------------
	실행할 명령;      |  -> 분리 사용 가능
  END;  -------------------

프로시저의 호출
- 매개변수의 값에 따라 괄호에 값의 개수를 맞춰서 넣는
  CALL 프로시저명(값);

프로시저SQL
-프로시저를 실제 테이블에 적용시키기
-- JOBS 테이블에 INSERT해주는 프로시저 만들기
   우리가 매번 INSERT 하는 명령을 써주기 귀찮기에 프로시저로 만들어
   CALL 명 하면 한번에 추가되도록 만들어보기

PL/SQL(IF문)
- 1. IF 조건 THEN 실행문; -> 조건이 참일 때 실행문을 실행하고 종료
     END IF;
- 2. IF 조건 THEN 실행문;
     ELSIF 조건 THEN 실행문; -> ELSIF를 여러 개 사용 가능: 비교하고자 하는 조건이
                                                                          여러 개 일 때 사용
- 3. IF  조건 THEN 실행문1;
     ELSE 실행문2;
     END IF;  -> 조건이 참이면 실행문1 실행, 거짓이면 실행문2 실행

DECLARE [선언부] - 변수, 상수를 선언할 수 있다.

BEGIN [실행부] - 제어, 반복문, 함수 등의 다양한 로직을 실행한다.

IF
ELSIF
ELSE
END IF;

END [종료부] - 실행된 로직의 종료를 선언한다.
